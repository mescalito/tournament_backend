swagger: "2.0"
info:
  version: 1.0.0
  title: myapp
  description: My cool app
basePath: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Specification
    description: The swagger API specification

consumes:
  - application/json
produces:
  - application/json


definitions:
  ExampleBody:
    type: object
    title: example
    required:
      - name
    properties:
      name:
        type: string
        example: no_stress
  game:
    required:
      - firstPlayer
      - secondPlayer
      - firstPlayerScore
      - secondPlayerScore
    properties:
      firstPlayer:
        type: string
        minLength: 1
        pattern: "^[a-zA-Z0-9- ]+$"
        example: goku
      secondPlayer:
        type: string
        minLength: 1
        pattern: "^[a-zA-Z0-9- ]+$"
        example: roshi
      firstPlayerScore:
        type: integer
        minLength: 1
        minimum: 0
        maximum: 99999
        example: 5
      secondPlayerScore:
        type: integer
        minLength: 1
        minimum: 0
        maximum: 99999
        example: 5


paths:
  /ranks:
    get:
      description: Returns all players with ranks and points
      operationId: findAllRanks
      responses:
        default:
          description: Returns the matching ranks
          schema:
            properties:
              id:
                type: integer 
                format: int32
                description: The auto-generated rank ID
                readOnly: true
                example: 65
              name:
                type: string
                minLength: 1
                pattern: "^[a-zA-Z0-9- ]+$"
                example: goku
              won:
                type: integer
                example: 5
              lost:
                type: integer
                example: 5
              tied:
                type: integer
                example: 5
              points:
                type: integer
                example: 5
          headers:
            last-modified:
              type: string
              description: The URL of the newly-added game
  /games:
    post:
      description: Create a new game
      parameters:
        - name: game
          in: body
          description: The game to add to the tournament
          required: true
          schema:
            $ref: "#/definitions/game"
      responses:
        201:
          description: Returns the newly-added game
          schema:
            properties:
              id:
                # Returned by GET, not used in POST/PUT/PATCH
                type: integer 
                format: int32
                description: The auto-generated game ID
                readOnly: true
                example: 2
              firstPlayer:
                type: string
                minLength: 1
                pattern: "^[a-zA-Z0-9- ]+$"
                example: goku
              secondPlayer:
                type: string
                minLength: 1
                pattern: "^[a-zA-Z0-9- ]+$"
                example: roshi
              firstPlayerScore:
                type: integer
                minLength: 1
                minimum: 0
                maximum: 99999
                example: 5
              secondPlayerScore:
                type: integer
                minLength: 1
                minimum: 0
                maximum: 99999
                example: 5
              date:
                type: string
                format: 'date'
                description: The auto-generated date when game was created
          headers:
            Location:
              type: string
              description: The URL of the request

  /examples:
    post:
      description: Create a new example
      parameters:
        - name: example
          in: body
          description: an example
          required: true
          schema: 
            $ref: "#/definitions/ExampleBody"
      responses:
        200:
          description: Returns all examples